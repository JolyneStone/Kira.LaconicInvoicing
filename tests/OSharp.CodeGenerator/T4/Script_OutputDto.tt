<#@ template language="C#" debug="True" #>
<#@ output extension="txt" #>
<#@ include file="T4Toolbox.tt" #>
<#@ include file="Template_TypeScript_Component.tt" #>

<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Net.Http.dll" #>
<#@ assembly name="$(TargetDir)netstandard.dll" #>
<#@ assembly name="$(TargetDir)Newtonsoft.Json.dll" #>
<#@ assembly name="$(TargetDir)OSharp.dll" #>

<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ Import Namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Net.Http" #>
<#@ import namespace="OSharp.Collections" #>
<#@ import namespace="OSharp.CodeGenerator" #>
<#@ import namespace="OSharp.Extensions" #>
<#@ import namespace="OSharp.Json" #>
<#
    string currentPath = Path.GetDirectoryName(Host.TemplateFile);
    string outputPath = currentPath + "\\ts_components";
    string modulePattern=@"(?<=Liuliu\.Demo\.)\w+(?=\.*Dtos)";

    HttpClient client = new HttpClient();
    string url = "http://localhost:7001/api/Common/GetTypeMetadatas?type=outputdto";
    string json = client.GetStringAsync(url).Result;
    TypeMetadata[] outputs = json.FromJsonString<TypeMetadata[]>();
 
    url = "http://localhost:7001/api/Common/GetTypeMetadatas?type=inputdto";
    json = client.GetStringAsync(url).Result;
    TypeMetadata[] inputs = json.FromJsonString<TypeMetadata[]>();
 
    foreach(var output in outputs.Where(m => m.Name.EndsWith("OutputDto")))
    {
        string entityName = output.Name.Substring("", "OutputDto");
        TypeMetadata input = inputs.FirstOrDefault(m => m.Name == entityName + "InputDto");
        TypeScriptComponentTemplate component = new TypeScriptComponentTemplate(output, input, modulePattern);
        string fileName = Path.Combine(outputPath, component.FileName);
        component.Output.Encoding = Encoding.UTF8;
        component.RenderToFile(fileName);
    }
#>